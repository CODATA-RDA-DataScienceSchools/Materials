summary(grouped_data)
userInput_IgG_min <- -5000
my_table <- grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(grouped_data$protocol %in% userInput_protocols)
my_table <- grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(grouped_data$protocol %in% userInput_protocols)
userInput_IgG_min <- -10000
userInput_protocols <- c("HC19S1",
"HC19S2",
"HC19RBD",
"HC19N")
my_table <- grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(grouped_data$protocol %in% userInput_protocols)
userInput_IgG_min <- -5000
my_table <- grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(grouped_data$protocol %in% userInput_protocols)
my_table <- grouped_data %>%
filter(userInput_category %in% grouped_data$category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(userInput_protocols %in% grouped_data$protocol)
grouped_data %>%
filter(userInput_category %in% grouped_data$category)
grouped_data %>%
filter("Covid positive with resistance" %in% grouped_data$category)
userInput_category <- c("Covid positive with resistance",
"Covid positive without resistance",
"Covid negative with resistance")
grouped_data %>%
filter(userInput_category %in% grouped_data$category)
userInput_category
grouped_data %>%
filter(grouped_data$category %in% userInput_category)
my_table <- grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(grouped_data$protocol %in% userInput_protocols)
grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max))
userInput_IgG_min <- -10000
grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max))
summary(grouped_data$protocol)
grouped_data %>%
filter(grouped_data$category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(protocol %in% userInput_protocols)
grouped_data %>%
filter(category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(protocol %in% userInput_protocols)
my_table <- grouped_data %>%
filter(category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(protocol %in% userInput_protocols)
summary(my_table)
userInput_IgG_min <- -5000
userInput_protocols <- c("HC19S1",
"HC19S2")
my_table <- grouped_data %>%
filter(category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(protocol %in% userInput_protocols)
summary(my_table)
my_table
data_summary <- grouped_data %>%
count(category, protocol)
my_theme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black",
size = 12),
axis.text.x = element_text(colour = "black",
size = 8))
ggplot(data = data_summary,
mapping = aes(x = str_wrap(protocol,18),
y = n)) +
geom_bar(stat = "identity",
position = "dodge") +
facet_wrap(vars(category)) +
labs(x = NULL,
y = "Value") +
my_theme -> my_plot
my_plot
library(DT)
install.packages("gtExtras")
install.packages("gtExtras")
install.packages("gtExtras")
install.packages("gtExtras")
library(gtExtras)
install.packages("scales")
library(gtExtras)
library(scales)
library(gtExtras)
ggplot(data = data_summary,
mapping = aes(x = str_wrap(protocol,18),
y = n)) +
geom_bar(stat = "identity",
position = "dodge") +
facet_wrap(vars(category)) +
labs(x = NULL,
y = "Value") +
my_theme -> my_plot
library(tidyverse)
library(readxl)
library(stringr)
ggplot(data = data_summary,
mapping = aes(x = str_wrap(protocol,18),
y = n)) +
geom_bar(stat = "identity",
position = "dodge") +
facet_wrap(vars(category)) +
labs(x = NULL,
y = "Value") +
my_theme -> my_plot
data_wide <- data %>%
pivot_wider(names_from = antigen,
values_from = value)
grouped_data <- data_wide %>%
mutate(category = case_when(IgG > 0 & IgM > 0 & IgA > 0 ~ "Covid positive with resistance",
IgG > 0 & IgM > 0 & IgA < 0 ~ "Covid positive with resistance",
IgG < 0 & IgM > 0 & IgA > 0 ~ "Covid positive without resistance",
IgG < 0 & IgM > 0 & IgA < 0 ~ "Covid positive without resistance",
IgG > 0 & IgM < 0 & IgA > 0 ~ "Covid negative with resistance",
IgG > 0 & IgM < 0 & IgA < 0 ~ "Covid negative with resistance",
IgG < 0 & IgM < 0 & IgA > 0 ~ "Covid negative without resistance",
IgG < 0 & IgM < 0 & IgA < 0 ~ "Covid negative without resistance"))
grouped_data <- grouped_data %>%
mutate_if(is.character, as.factor)
userInput_category <- c("Covid positive with resistance",
"Covid positive without resistance",
"Covid negative with resistance",
"Covid negative without resistance")
userInput_IgG_min <- -10000
userInput_IgG_max <- 30000
userInput_IgM_min <- -1000
userInput_IgM_max <- 15000
userInput_IgA_min <- -1000
userInput_IgA_max <- 20000
userInput_protocols <- c("HC19S1",
"HC19S2",
"HC19RBD",
"HC19N")
my_table <- grouped_data %>%
filter(category %in% userInput_category) %>%
filter(between(IgG, userInput_IgG_min, userInput_IgG_max),
between(IgM, userInput_IgM_min, userInput_IgM_max),
between(IgA, userInput_IgA_min, userInput_IgA_max)) %>%
filter(protocol %in% userInput_protocols)
summary(my_table)
my_table
data_summary <- grouped_data %>%
count(category, protocol)
my_theme <- theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y = element_text(colour = "black",
size = 12),
axis.text.x = element_text(colour = "black",
size = 8))
ggplot(data = data_summary,
mapping = aes(x = str_wrap(protocol,18),
y = n)) +
geom_bar(stat = "identity",
position = "dodge") +
facet_wrap(vars(category)) +
labs(x = NULL,
y = "Value") +
my_theme -> my_plot
my_plot
View(my_table)
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100)
summary(my_table$IgG)
12761.50/22233*100
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100)
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE)
library(gt)
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE)
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE) %>%
cols_align("center", contains("scale"))
?gt_plt_bar
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE,
color = "blue") %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE)
?gt_plt_bar_pct
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE,
fill = "blue") %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE) %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE)
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = c(IgG_scaled,
IgM_scaled,
IgA_scaled),
scaled = TRUE,
fill = "blue")
my_table %>%
mutate(IgG_scaled = IgG/max(IgG) * 100,
IgM_scaled = IgM/max(IgM) * 100,
IgA_scaled = IgA/max(IgA) * 100) %>%
gt() %>%
gt_plt_bar_pct(column = IgG_scaled, scaled = TRUE,
fill = "blue") %>%
gt_plt_bar_pct(column = IgM_scaled, scaled = TRUE,
fill = "blue") %>%
gt_plt_bar_pct(column = IgA_scaled, scaled = TRUE,
fill = "blue")
install.packages("shinydashboard")
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
?sliderInput
?checkboxGroupInput
runApp('covid_dashboard.R')
install.packages("fiftystater")
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
library(shiny); runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('test')
runApp('test')
runApp('test')
data <- read.csv(file.choose(new = TRUE)) #data_wide.csv
grouped_data <- data %>%
mutate(category = case_when(IgG > 0 & IgM > 0 & IgA > 0 ~ "Covid positive with resistance",
IgG > 0 & IgM > 0 & IgA < 0 ~ "Covid positive with resistance",
IgG < 0 & IgM > 0 & IgA > 0 ~ "Covid positive without resistance",
IgG < 0 & IgM > 0 & IgA < 0 ~ "Covid positive without resistance",
IgG > 0 & IgM < 0 & IgA > 0 ~ "Covid negative with resistance",
IgG > 0 & IgM < 0 & IgA < 0 ~ "Covid negative with resistance",
IgG < 0 & IgM < 0 & IgA > 0 ~ "Covid negative without resistance",
IgG < 0 & IgM < 0 & IgA < 0 ~ "Covid negative without resistance"))
grouped_data <- grouped_data %>%
mutate_if(is.character, as.factor)
grouped_data %>%
filter(category == "Covid positive with resistance")
grouped_data %>%
filter(category == "Covid positive with resistance",
between(IgG, 0, 20000),
between(IgM, 0, 20000)
between(IgA, 0, 20000))
grouped_data %>%
filter(category == "Covid positive with resistance",
between(IgG, 0, 20000),
between(IgM, 0, 20000),
between(IgA, 0, 20000))
x <- grouped_data %>%
filter(category == "Covid positive with resistance",
between(IgG, 0, 20000),
between(IgM, 0, 20000),
between(IgA, 0, 20000))
levels(x$protocol)
summary(x$protocol)
runApp('test')
runApp('test')
data <- read.csv(file.choose(new = TRUE)) #data_wide.csv
grouped_data <- data %>%
mutate(category = case_when(IgG > 0 & IgM > 0 & IgA > 0 ~ "Covid positive with resistance",
IgG > 0 & IgM > 0 & IgA < 0 ~ "Covid positive with resistance",
IgG < 0 & IgM > 0 & IgA > 0 ~ "Covid positive without resistance",
IgG < 0 & IgM > 0 & IgA < 0 ~ "Covid positive without resistance",
IgG > 0 & IgM < 0 & IgA > 0 ~ "Covid negative with resistance",
IgG > 0 & IgM < 0 & IgA < 0 ~ "Covid negative with resistance",
IgG < 0 & IgM < 0 & IgA > 0 ~ "Covid negative without resistance",
IgG < 0 & IgM < 0 & IgA < 0 ~ "Covid negative without resistance"))
x <- grouped_data %>%
filter(category == "Covid negative with resistance",
between(IgG, 0, 20000),
between(IgM, -5000, 20000),
between(IgA, 0, 20000))
summary(x$protocol)
grouped_data <- grouped_data %>%
mutate_if(is.character, as.factor)
x <- grouped_data %>%
filter(category == "Covid negative with resistance",
between(IgG, 0, 20000),
between(IgM, -5000, 20000),
between(IgA, 0, 20000))
summary(x$protocol)
runApp('test')
runApp('test')
summary(data)
runApp('test')
runApp('covid_dashboard.R')
x <- grouped_data %>%
filter(category == c("Covid positive with resistance",
"Covid positive without resistance"),
between(IgG, -10000, 25000),
between(IgM, -10000, 25000),
between(IgA, -10000, 25000))
summary(x$protocol)
x <- grouped_data %>%
filter(category == c("Covid positive with resistance",
"Covid positive without resistance"),
between(IgG, -10000, 25000),
between(IgM, -10000, 25000),
between(IgA, -10000, 25000),
protocol == "HC19N")
x
runApp('covid_dashboard.R')
?checkboxGroupInput
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
?downloadButton
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('test')
?write.csv
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp()
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
?ggsave
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
x <- grouped_data %>%
filter(category == c("Covid positive with resistance"),
between(IgG, -10000, 25000),
between(IgM, -10000, 25000),
between(IgA, -10000, 25000),
protocol == "HC19N")
x
runApp('covid_dashboard.R')
View(grouped_data)
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
grouped_data %>%
filter(between(lab_id, 494, 497))
grouped_data %>%
filter(between(lab_id, 495, 496))
grouped_data %>%
filter(between(lab_id, 495, 496)) %>%
arrange(lab_id)
View(data)
runApp('covid_dashboard.R')
?checkboxGroupInput
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
shiny::runApp('test')
runApp('test')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
?ggsave
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
library(DT)
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
?column
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
?awesomeCheckboxGroup
??awesomeCheckboxGroup
install.packages("shinyWidgets")
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
runApp('covid_dashboard2.R')
View(data_wide)
library(shiny); runApp('covid_dashboard.R')
runApp('covid_dashboard2.R')
library(shiny); runApp('covid_dashboard2.R')
library(shiny); runApp('covid_dashboard2.R')
library(shiny); runApp('covid_dashboard2.R')
runApp('covid_dashboard.R')
library(shiny); runApp('covid_dashboard.R')
library(shiny); runApp('covid_dashboard2.R')
setwd("~/Volunteer/Trieste (2023)/Materials/docs/DataTrieste2023/Quarto")
