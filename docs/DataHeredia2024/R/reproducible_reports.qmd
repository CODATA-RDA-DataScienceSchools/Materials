---
title: "Reproducible Reports"
subtitle: ""
authors: 
  - name: Marcela Alfaro C√≥rdoba (Ph.D.)
    orcid: 0000-0002-7703-3578
    email: macordob@ucsc.edu
    affiliations:
      - University of California, Santa Cruz
  - name: Bianca Peterson (Ph.D.)
    orcid: 0000-0001-6927-9159
    email: bianca@fathomdata.dev
    affiliations:
      - Fathom Data
bibliography: authorcarpentry.bib
format:
  revealjs: 
    theme: dark
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/logo.png
    css: styles.css
    footer: <https://bit.ly/3pUP3G5>
---

## Reproducible Reports

[![The Turing Way: Reproducible Research](https://the-turing-way.netlify.app/_images/reproducible-definition-grid.svg){fig-align="center"}](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions.html)

## Why do we want to work on repro-mode?

[![The Turing Way: Advantages of Reproducible Research](https://the-turing-way.netlify.app/_images/reasons-reproducibility.png){fig-align="center"}](https://the-turing-way.netlify.app/reproducible-research/overview/overview-benefit.html)

## What is Quarto? (1/3)

-   Quarto is an open-source scientific and technical publishing system built on Pandoc (same as LateX).
-   Create dynamic content with Python, R, Julia, and Observable (JavaScript).
-   Author documents using Jupyter notebooks or with plain text markdown using your favorite editor (e.g. VS Code, RStudio, Jupyter Lab, etc.).

## What is Quarto? (2/3)

-   Publish high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.
-   Author with scientific markdown, including equations, citations, figure panels, advanced layout, and more.

## What is Quarto? (3/3)

Some examples:

-   This presentation was done in Quarto. üòÉ

-   You can produce HTML reports such as [this one](https://quarto-dev.github.io/quarto-gallery/page-layout/tufte.html).

-   Other examples: <https://quarto.org/docs/gallery/>

    üëÅÔ∏è‚Äçüó®Ô∏è If you want to look at the code for these examples, click on the `</>` icon.

## What tools did we use before Quarto?

-   Word processor (Microsoft Word, Open Office, Google Docs, etc.)
-   Jupyter Notebooks
-   R Markdown
-   LaTeX (Overleaf, TeXstudio, etc.)
-   Any other? Type it in the chat (online) or say it out loud (in class).

## What changed?

[![The Turing Way: Guide for Reproducible Research](https://the-turing-way.netlify.app/_images/reproducibility.jpg){fig-align="center"}](https://the-turing-way.netlify.app/reproducible-research/reproducible-research.html)

## Anatomy of a Quarto document

-   **`YAML`**: "YAML is a human-readable data serialization language that is often used for writing configuration files. It contains the metadata (title, tags, and descriptions) for the document.
-   **`Main Body`**: Text, which may include in-line code, written in [markdown](https://quarto.org/docs/authoring/markdown-basics.html) (plain text formatting) syntax.
-   **`Code Chunks`**: Code in different languages (depending on what you have installed on your computer) that can be executed when the document is rendered.

## Let's do it!

Follow these steps:

1.  Open RStudio.
2.  Click **`File`** \> **`New Project`** \> **`New Directory`** \> **`Quarto Project`** \> Name your Directory and click on **`Create git repository`** \> **`Create Project`**.
3.  Click on **`Render`** to test that the most basic Quarto document renders on your computer.
4.  If it worked, you should see a `<filename>.html` file in your local folder. Open it in your Web Browser.

## Let's start with YAML

-   Be careful with the indentation!

-   Let's add: title, author, and date.

‚è∞ 2 minutes

```         
---
title: "Reproducible Report Example"
author: Your name
date: 2023/08/03
format: gfm 
---
```

## YAML details

It depends on the format you want to work in:

-   [Markdown](https://quarto.org/docs/output-formats/gfm.html)
-   [HTML](https://quarto.org/docs/output-formats/html-basics.html)
-   [PDF](https://quarto.org/docs/output-formats/pdf-basics.html)
-   [MS Word](https://quarto.org/docs/output-formats/ms-word.html)
-   Other formats (Presentations, Open Office, ePub, etc.)

## We will continue to work in HTML

-   Why? Because it's more flexible.
-   Nevertheless, you can also use `gfm` format to create `Readme.md` files for your repo on GitHub or GitLab.
-   It is possible to deploy as a webpage on GitHub/GitLab.
-   Data and code are available from your repo as a [Webpage](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site).
-   You can also [add a DOI](https://docs.github.com/en/repositories/archiving-a-github-repository/referencing-and-citing-content).

## Now let's add text in the Main Body

```         
## Introduction

This is a Quarto document. To learn more about Quarto see <https://quarto.org>.

Another way to create links is to use: [a label with a link](https://quarto.org)
```

ü§ì Go through [this tutorial](https://commonmark.org/help/tutorial/) to learn markdown in a fun, interactive way!

## And now, the code chunks:

Here we call the R \`summary()\` function

The function's output is included immediately below the code.

```{r echo=TRUE}
#| code-fold: true
summary(cars)
```

How much do you want to see?

#\| code-fold: true

## Plot Output

You can also embed plots, for example:

```{r echo = TRUE}
#| label: fig-pressure
#| fig-cap: "Pressure"
#| code-fold: true

library(ggplot2)

dat <- data.frame(cond = rep(c("A", "B"), each=10),
                  xvar = 1:20 + rnorm(20,sd=3),
                  yvar = 1:20 + rnorm(20,sd=3))

ggplot(dat, aes(x=xvar, y=yvar)) +
    geom_point(shape=1) + 
    geom_smooth() 
```


## Tables {.smaller}

Use the `knitr::kable()` function to print tables as HTML:

```{r}
knitr::kable(head(ggplot2::diamonds))
```

## LaTeX Math

You can also include LaTeX math:

:::: {.columns}
::: {.column width="50%"}
\$\$
  P\\left(A=2\\middle\|\\frac{A\^2}{B}\>4\\right)
  
\$\$
:::
::: {.column width="50%"}
$$
P\left(A=2\middle|\frac{A^2}{B}>4\right)
$$
:::
::::

## Add bibliography

This is the list of articles we'll use:

0.  They can be found in [this folder](https://drive.google.com/drive/folders/14QsEDkAoyEt4eeobQFJi6o-reHYC03Nx?usp=sharing)
1.  @Doney2009
2.  @Jullion2014
3.  @Menezes2017
4.  @Resplandy2018
5.  @Hahn2017

## .bib files

The easiest way to do this is maintaining a `.bib` file. You can create it using Zotero, or you can create it manually using <https://www.doi2bib.org/>.

-   Zotero: Select the library you wish to export to BibTex in Zotero.
-   Create a file in any Text editor -\> paste the bibs using <https://www.doi2bib.org/> and save it as `<filename>.bib` in the same project folder.

## References {.smaller}

::: {#refs style="font-size: 80%;"}
:::

## Citing software and data

-   From IEEE: <https://ieeexplore.ieee.org/document/9018356>
-   From PeerJ: <https://peerj.com/articles/cs-86/>
-   Persistent identifiers for code and data. How? Zenodo, FigShare, Institutional Repository, GitHub/DOI.

## Thank you!

Marcela Alfaro C√≥rdoba, Ph.D.

[`r icons::icon_style(icons::fontawesome("twitter"), fill="white")` macordob](https://twitter.com/macordob)\
[`r icons::icon_style(icons::fontawesome("envelope-open", style = "solid"), fill="white")` macordob\@ucsc.edu](mailto:macordob@ucsc.edu)\
[`r icons::icon_style(icons::fontawesome("rocket", style = "solid"), fill="white")` https://malfaro.netlify.app/](https://malfaro.netlify.app/)

--

Bianca Peterson, Ph.D.

[`r icons::icon_style(icons::fontawesome("twitter"), fill="white")` binxiepeterson](https://twitter.com/binxiepeterson)\
[`r icons::icon_style(icons::fontawesome("envelope-open", style = "solid"), fill="white")` bianca\@fathomdata.dev](mailto:bianca@fathomdata.dev)

[`r icons::icon_style(icons::fontawesome("rocket", style = "solid"), fill="white")` https://binxiepeterson.github.io/](https://binxiepeterson.github.io/)
